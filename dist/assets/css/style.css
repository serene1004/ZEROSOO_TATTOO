@import url("https://cdn.jsdelivr.net/gh/orioncactus/pretendard/dist/web/static/pretendard.css");
@import url("https://fonts.googleapis.com/css2?family=Playfair+Display:wght@500&display=swap");
* {
    margin: 0;
    padding: 0;
    font: inherit;
    color: inherit;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    font-family: "pretendard";
}

*, :after, :before {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    -ms-flex-negative: 0;
    flex-shrink: 0;
}

:root {
    -webkit-tap-highlight-color: transparent;
    -webkit-text-size-adjust: 100%;
    -moz-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    text-size-adjust: 100%;
    line-height: 1.5;
    overflow-wrap: break-word;
    -moz-tab-size: 4;
    -o-tab-size: 4;
    tab-size: 4;
}

html, body {
    height: 100%;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}

button {
    padding: 0;
    background: none;
    border: 0;
    cursor: pointer;
}

a {
    text-decoration: none;
}

ul, ol, li {
    list-style: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

.wrapper {
    width: 100%;
    color: #191919;
    font-size: 16px;
    font-weight: 400;
    overflow-x: hidden;
}

.inner {
    max-width: 1600px;
    width: 100%;
    margin: 0 auto;
    padding: 0 20px;
}

.blind {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
}

.ellipsis {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    word-break: break-word;
    overflow: hidden;
    text-overflow: ellipsis;
}

.dot {
    position: relative;
}
.dot::after {
    content: ".";
    color: #FF7A7A;
}

.header {
    position: relative;
    z-index: 10;
    height: 80px;
    padding: 10px;
    border-bottom: 1px solid #DFDFDF;
}
.header .inner {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
}
.header .logo {
    width: 120px;
    height: 41px;
}
.header .logo a {
    display: block;
    width: 100%;
    height: 100%;
    background-image: url(../images/logo.svg);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
}
.header .contact {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: 20px;
}

.gnb {
    gap: 60px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
    height: 24px;
}
.gnb_item {
    font-size: 14px;
    font-weight: 500;
    position: relative;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
    overflow: hidden;
}
.gnb_item::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 100%;
    height: 2px;
    background: #FF7A7A;
}
.gnb_item::before {
    -webkit-transform: translateY(2px);
    transform: translateY(2px);
    -webkit-transition: -webkit-transform 0.2s ease-out;
    transition: -webkit-transform 0.2s ease-out;
    transition: transform 0.2s ease-out;
    transition: transform 0.2s ease-out, -webkit-transform 0.2s ease-out;
}
.gnb_item:hover::before, .gnb_item.on::before {
    -webkit-transform: translateY(0);
    transform: translateY(0);
}

.main {
    position: relative;
    min-height: calc(100vh - 230px);
}
.main h2 {
    position: relative;
    font-family: "Playfair Display", serif;
    font-size: 80px;
    font-weight: 400;
    line-height: normal;
}

.footer {
    padding: 20px 0 40px;
    border-top: 1px solid #9d9d9d;
    color: #9d9d9d;
    font-size: 14px;
}
.footer .inner {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 10px 20px;
    gap: 10px;
}
.footer_logo {
    width: 120px;
    height: 41px;
    background-image: url(../images/logo-gray.svg);
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
}
.footer_bottom {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: 100%;
    line-height: normal;
}

.address {
    position: relative;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    gap: 24px;
}
.address_item {
    position: relative;
    text-transform: uppercase;
}
.address_item:not(:last-child)::after {
    content: "";
    position: absolute;
    top: 50%;
    right: -12px;
    width: 1px;
    height: 1em;
    background-color: #9d9d9d;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}
.address_item a {
    text-transform: initial;
}

.ic_instagram {
    background-image: url(../images/ic_instagram-gray.svg);
}
.ic_instagram:hover, .ic_instagram.on {
    background-image: url(../images/ic_instagram.svg);
}
.ic_kakaotalk {
    background-image: url(../images/ic_kakaotalk-gray.svg);
}
.ic_kakaotalk:hover, .ic_kakaotalk.on {
    background-image: url(../images/ic_kakaotalk.svg);
}

.btn {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    padding: 0 10px;
    background-color: #FF7A7A;
    color: #fff;
    font-weight: 500;
    line-height: 20px;
}
.btn:hover {
    background-color: #FFBABA;
}
.btn.small {
    min-width: 124px;
    height: 40px;
    border-radius: 20px;
    font-size: 14px;
}
.btn.medium {
    min-width: 320px;
    height: 50px;
    border-radius: 25px;
    font-size: 16px;
}
.btn.large {
    min-width: 460px;
    height: 60px;
    border-radius: 30px;
    font-size: 18px;
    font-weight: 700;
}
.btn.ic40 {
    background-color: transparent;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;
    min-width: 0;
    width: 40px;
    height: 40px;
    padding: 0;
    border-radius: 50%;
}

.inputbox {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    max-width: 680px;
    width: 100%;
    height: 40px;
    gap: 6px;
}
.inputbox input {
    width: 100%;
    height: 100%;
    padding: 0 10px;
    border: 1px solid #c4c4c4;
    border-radius: 2px;
    outline: 0;
}
.inputbox input:focus {
    border-color: #FF7A7A;
}
.inputbox label {
    font-size: 16px;
    font-weight: 700;
    text-transform: uppercase;
}
.inputbox label.required::after {
    content: "*";
    color: #FF7A7A;
}

.checkbox {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.checkbox input + label {
    position: relative;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: 22px;
    height: 22px;
    background: #fff;
    border: 1px solid #c4c4c4;
    border-radius: 3px;
    color: #797979;
    font-size: 16px;
    line-height: 22px;
    text-indent: 28px;
    white-space: nowrap;
    -webkit-transition: all 0.15s;
    transition: all 0.15s;
    cursor: pointer;
}
.checkbox input + label::after {
    content: "";
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    width: 18px;
    height: 13px;
    background-image: url(../images/ic_check.svg);
    background-repeat: no-repeat;
    background-position: center center;
    -webkit-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
}
.checkbox input:disabled + label {
    background: #f3f3f3;
    border-color: #f3f3f3;
    opacity: 0.5;
    cursor: default;
}
.checkbox input:checked + label {
    background: #FF7A7A;
    border-color: #FF7A7A;
}
.checkbox input:checked + label::after {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    -webkit-animation: aniChecked 0.15s;
    animation: aniChecked 0.15s;
}
@-webkit-keyframes aniChecked {
    0% {
        -webkit-transform: translate(-50%, -50%) scale(0);
        transform: translate(-50%, -50%) scale(0);
    }
    75% {
        -webkit-transform: translate(-50%, -50%) scale(1.25);
        transform: translate(-50%, -50%) scale(1.25);
    }
    100% {
        -webkit-transform: translate(-50%, -50%) scale(1);
        transform: translate(-50%, -50%) scale(1);
    }
}
@keyframes aniChecked {
    0% {
        -webkit-transform: translate(-50%, -50%) scale(0);
        transform: translate(-50%, -50%) scale(0);
    }
    75% {
        -webkit-transform: translate(-50%, -50%) scale(1.25);
        transform: translate(-50%, -50%) scale(1.25);
    }
    100% {
        -webkit-transform: translate(-50%, -50%) scale(1);
        transform: translate(-50%, -50%) scale(1);
    }
}
.checkbox input {
    display: none;
}

.radiobox {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.radiobox input + label {
    position: relative;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    width: 22px;
    height: 22px;
    background: #fff;
    border: 1px solid #c4c4c4;
    border-radius: 50%;
    color: #797979;
    font-size: 16px;
    line-height: 22px;
    text-indent: 28px;
    white-space: nowrap;
    -webkit-transition: all 0.15s;
    transition: all 0.15s;
    cursor: pointer;
}
.radiobox input + label::after {
    content: "";
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    width: 14px;
    height: 14px;
    background: #FF7A7A;
    border-radius: 50%;
    -webkit-transform: translate(-50%, -50%) scale(0);
    transform: translate(-50%, -50%) scale(0);
}
.radiobox input:disabled + label {
    background: #f3f3f3;
    border-color: #f3f3f3;
    opacity: 0.5;
    cursor: default;
}
.radiobox input:checked + label::after {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    -webkit-animation: aniChecked 0.15s;
    animation: aniChecked 0.15s;
}
@keyframes aniChecked {
    0% {
        -webkit-transform: translate(-50%, -50%) scale(0);
        transform: translate(-50%, -50%) scale(0);
    }
    75% {
        -webkit-transform: translate(-50%, -50%) scale(1.25);
        transform: translate(-50%, -50%) scale(1.25);
    }
    100% {
        -webkit-transform: translate(-50%, -50%) scale(1);
        transform: translate(-50%, -50%) scale(1);
    }
}
.radiobox input {
    display: none;
}

.textareabox {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    max-width: 680px;
    width: 100%;
    height: 40px;
    gap: 6px;
}
.textareabox textarea {
    width: 100%;
    min-height: 200px;
    padding: 8px 10px;
    border: 1px solid #c4c4c4;
    border-radius: 2px;
    outline: 0;
}
.textareabox textarea:focus {
    border-color: #FF7A7A;
}
.textareabox label {
    font-size: 16px;
    font-weight: 700;
    text-transform: uppercase;
}
.textareabox label.required::after {
    content: "*";
    color: #FF7A7A;
}

.page_section {
    position: relative;
    z-index: 1;
}
.page_visual {
    height: calc(100vh - 80px);
}
.page_visual .inner {
    height: 100%;
}
.page_visual h2 {
    position: relative;
    z-index: 1;
    left: 1em;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    width: 7.5em;
    height: 100%;
    padding-bottom: 15vh;
}
.page_visual h2::after {
    display: none;
}
.page_visual h2 span {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 100%;
    font-family: inherit;
}
.page_visual h2 span:nth-child(1) {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
}
.page_visual h2 span:nth-child(2) {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: flex-end;
}
.page_visual h2 span:nth-child(3) {
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
}
.page_visual .bg {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.page_visual .bg_circle {
    position: absolute;
    width: 620px;
    height: 620px;
    background: #f9f9f9;
}
.page_visual .bg_circle:first-child {
    z-index: 0;
    background: transparent;
    border: 1px solid #FF7A7A;
    -webkit-transform: translate(-12%, -55px);
    transform: translate(-12%, -55px);
    -webkit-animation: visualLeftCircle 1s ease-out;
    animation: visualLeftCircle 1s ease-out;
}
.page_visual .bg_circle:last-child {
    z-index: 1;
    -webkit-transform: translate(55%, 55px);
    transform: translate(55%, 55px);
    -webkit-animation: visualRightCircle 1s ease-out;
    animation: visualRightCircle 1s ease-out;
}
@-webkit-keyframes visualLeftCircle {
    from {
        -webkit-transform: translate(-40%, -55px);
        transform: translate(-40%, -55px);
    }
    to {
        -webkit-transform: translate(-12%, -55px);
        transform: translate(-12%, -55px);
    }
}
@keyframes visualLeftCircle {
    from {
        -webkit-transform: translate(-40%, -55px);
        transform: translate(-40%, -55px);
    }
    to {
        -webkit-transform: translate(-12%, -55px);
        transform: translate(-12%, -55px);
    }
}
@-webkit-keyframes visualRightCircle {
    from {
        -webkit-transform: translate(85%, 55px);
        transform: translate(85%, 55px);
    }
    to {
        -webkit-transform: translate(55%, 55px);
        transform: translate(55%, 55px);
    }
}
@keyframes visualRightCircle {
    from {
        -webkit-transform: translate(85%, 55px);
        transform: translate(85%, 55px);
    }
    to {
        -webkit-transform: translate(55%, 55px);
        transform: translate(55%, 55px);
    }
}

.bg {
    position: absolute;
    z-index: 0;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
.bg_circle {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    border-radius: 50%;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
