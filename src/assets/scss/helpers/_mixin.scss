@use './variables' as *;

@mixin blind {
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
}

@mixin ellipsis($line) {
    @if ($line == 0) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    } @else {
        display: -webkit-box;
        -webkit-line-clamp: $line;
        -webkit-box-orient: vertical;
        word-break: break-word;
        overflow: hidden;
        text-overflow: ellipsis;
    }
}

// 수직중앙정렬 
@mixin verticalCenter {
    display: flex;
    align-items: center;
    height: 100%;
}

// inner
@mixin inner {
    max-width: 1600px;
    width: 100%;
    margin: 0 auto;
    padding: 0 20px;
}

@mixin label {
    font-size: $fsz-normal;
    font-weight: 700;
    text-transform: uppercase;

    &.required {

        &::after {
            content: '*';
            color: $primary;
        }
    }
}

// container style
@mixin containerStyle ($width) {
    display: flex;
    justify-content: space-between;

    // 너비가 50%일경우와 아닐경우
    @if ($width == 50%) {
        .left-box, .right-box {
            width: calc($width - 10px);
        }
    } @else {
        .left-box {
            width: calc($width - 20px);
            margin-right: 20px;
        }

        .right-box {
            width: calc(100% - $width);
        }
    }
}

// line Animation
@mixin lineAnimation ($scale:0){
    position: relative;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    height: 100%;

    &::before {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        display: inline-flex;
        width: 100%;
        height: 2px;
        background: $primary;
    }

    @if ($scale != 0) {
        overflow: hidden;
        
        &::before {
            transform: translateY(2px);
            transition: transform 0.2s ease-out;
        }

        &:hover,
        &.on {

            &::before {
                transform: translateY(0);
            }
        }
    } @else {

        &::before {
            transform: scaleX(0);
            transform-origin: right center;
            transition: transform 0.2s;
        }

        &:hover,
        &.on {

            &::before {
                transform: scale(1);
                transform-origin: left center;
            }
        }
    }
}

// 버튼스타일
@mixin btnStyle($size, $radius: 0) {
    min-width: 0;
    width: $size;
    height: $size;
    padding: 0;
   
    @if $radius != 0 {
        border-radius: $radius;
    }
}

// 반응형
@mixin response($breakpoint) {
    @if ($breakpoint == $desktop) {
        @media screen and (max-width: $desktop) {
            @content;
        }
    } @else if ($breakpoint == $laptap) {
        @media screen and (max-width: $laptap) {
            @content;
        }
    } @else if ($breakpoint == $tablet-l) {
        @media screen and (max-width: $tablet-l) {
            @content;
        }
    } @else if ($breakpoint == $tablet-s) {
        @media screen and (max-width: $tablet-s) {
            @content;
        }
    } @else if ($breakpoint == $mobile) {
        @media screen and (max-width: $mobile) {
            @content;
        }
    }
}
